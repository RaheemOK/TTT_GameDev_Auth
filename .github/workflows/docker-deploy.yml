name: CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Decode GCP Credentials
        run: |
          echo "$GCP_CREDENTIALS" | base64 -d > gcp-credentials.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=${GITHUB_WORKSPACE}/gcp-credentials.json" >> $GITHUB_ENV
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build Docker Image
        run: |
          docker build \
            --platform linux/amd64 \
            --no-cache \
            --build-arg DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }} \
            --build-arg DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }} \
            -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/ttt-gamedev-auth-micro:latest .
      

      - name: Authenticate with Google Artifact Registry
        run: echo "${{ secrets.ARTIFACT_ACCESS_KEY }}" | base64 -d | docker login -u _json_key --password-stdin https://${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}

      - name: Push Docker Image
        run: docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/ttt-gamedev-auth-micro:latest

      - name: Capture VM External IP to File
        run: echo ${{ secrets.VM_EXTERNAL_IP }} > vm_external_ip.txt

      - name: Decode SSH Key
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > id_rsa_ttt_gda_micro
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up SSH Permissions
        run: |
          mkdir -p ~/.ssh
          chmod 600 id_rsa_ttt_gda_micro
          echo "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

      - name: Create .env file
        run: |
            echo "ALLOWED_HOSTS=${{ secrets.VM_EXTERNAL_IP }}" > .env
            # Add other environment variables here


      - name: Deploy to GCE VM
        run: |
          set -x  # Enable debugging
          IP=${{ secrets.VM_EXTERNAL_IP }}
          echo "Using VM IP: $IP"

          # Write ARTIFACT_ACCESS_KEY and VM_EXTERNAL_IP to a file and copy to the VM
          echo "${{ secrets.ARTIFACT_ACCESS_KEY }}" > artifact_access_key.json
          scp -i id_rsa_ttt_gda_micro -o StrictHostKeyChecking=no artifact_access_key.json raheem@$IP:~/
          scp -i id_rsa_ttt_gda_micro -o StrictHostKeyChecking=no .env raheem@$IP:~/

          # SSH into the VM and execute Docker-related commands
          ssh -i id_rsa_ttt_gda_micro -o StrictHostKeyChecking=no raheem@$IP <<EOF
          echo "Inside VM"

          # Decode and use ARTIFACT_ACCESS_KEY for Docker login inside VM
          cat artifact_access_key.json | base64 -d | docker login -u _json_key --password-stdin https://${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}

          docker stop ttt-gamedev-auth-micro || true &&
          docker rm ttt-gamedev-auth-micro || true &&
          docker pull europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/ttt-gamedev-auth-micro:latest &&
          docker run -d -p 8001:8001 --name ttt-gamedev-auth-micro --env-file .env europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/ttt-gamedev-auth-micro:latest
          EOF
          set +x
      
