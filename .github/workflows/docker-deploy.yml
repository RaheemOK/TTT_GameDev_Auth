name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Decode GCP Credentials
        run: |
          echo "$GCP_CREDENTIALS" | base64 -d > gcp-credentials.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=${GITHUB_WORKSPACE}/gcp-credentials.json" >> $GITHUB_ENV
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

      # Terraform code triggering part removed

      - name: Build Docker Image
        run: docker build --platform linux/amd64 --no-cache -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/ttt-gamedev-auth-micro:latest .

      - name: Authenticate with Google Artifact Registry
        run: cat gcp-credentials.json | docker login -u _json_key --password-stdin https://${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}

      - name: Push Docker Image
        run: docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/ttt-gamedev-auth-micro:latest

      - name: Capture VM External IP to File
        run: echo ${{ secrets.VM_EXTERNAL_IP }} > vm_ip.txt  # Use the new GitHub secret

      - name: Decode SSH Key
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > id_rsa_ttt_gda_micro
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up SSH Permissions
        run: |
          mkdir -p ~/.ssh
          chmod 600 id_rsa_ttt_gda_micro
          echo "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

      - name: Deploy to GCE VM
        run: |
          set -x  # Enable debugging
          IP=${{ secrets.VM_EXTERNAL_IP }}  # Use the new GitHub secret
          echo "Using VM IP: $IP"
          
          # Copy service account key to the VM
          echo "SSH command: scp -i id_rsa_ttt_gda_micro -o StrictHostKeyChecking=no service_account_key.json raheem@$IP:~/"
          scp -i id_rsa_ttt_gda_micro -o StrictHostKeyChecking=no service_account_key.json raheem@$IP:~/
          
          # SSH into the VM and execute Docker-related commands
          echo "SSH command: ssh -i id_rsa_ttt_gda_micro -o StrictHostKeyChecking=no raheem@$IP"
          ssh -i id_rsa_ttt_gda_micro -o StrictHostKeyChecking=no raheem@$IP <<EOF
          echo "Inside VM"
          
          # Log in to Docker with service account key
          cat ~/service_account_key.json | docker login -u _json_key --password-stdin https://***-docker.pkg.dev  # Replace *** with your details
          
          # Stop and remove any existing Docker container (if exists)
          docker stop ttt-gamedev-auth-micro || true
          docker rm ttt-gamedev-auth-micro || true
          
          # Pull the latest Docker image
          docker pull europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/ttt-gamedev-auth-micro:latest
          
          # Run the Docker container in detached mode
          docker run -d -p 8080:8080 --name ttt-gamedev-auth-micro europe-west2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REPO_NAME }}/ttt-gamedev-auth-micro:latest
          EOF
          set +x  # Disable debugging
